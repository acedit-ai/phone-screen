"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[976],{7879:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"intro","title":"Welcome to AI Phone Screen","description":"AI Phone Screen is an open-source starter project for building AI-powered calling systems using OpenAI\'s Realtime API and Twilio.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/documentation/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/acedit-ai/phone-screen/tree/main/documentation/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Quick Start Guide","permalink":"/documentation/quick-start"}}');var s=t(4848),r=t(8453);const l={sidebar_position:1},o="Welcome to AI Phone Screen",c={},a=[{value:"\ud83c\udfaf What You Can Build",id:"-what-you-can-build",level:2},{value:"\ud83c\udfd7\ufe0f Architecture",id:"\ufe0f-architecture",level:2},{value:"\ud83d\ude80 Quick Start",id:"-quick-start",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"1. Clone &amp; Install",id:"1-clone--install",level:3},{value:"2. Environment Setup",id:"2-environment-setup",level:3},{value:"3. Start Development",id:"3-start-development",level:3},{value:"\ud83d\udcda What&#39;s Next?",id:"-whats-next",level:2},{value:"\ud83c\udf1f Features",id:"-features",level:2},{value:"\ud83e\udd1d Contributing",id:"-contributing",level:2},{value:"\ud83d\udcc4 License",id:"-license",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"welcome-to-ai-phone-screen",children:"Welcome to AI Phone Screen"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"AI Phone Screen"})," is an open-source starter project for building AI-powered calling systems using OpenAI's Realtime API and Twilio."]}),"\n",(0,s.jsx)(n.h2,{id:"-what-you-can-build",children:"\ud83c\udfaf What You Can Build"}),"\n",(0,s.jsx)(n.p,{children:"This starter gives you everything needed to create:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AI Interview Practice Systems"})," - Mock phone interviews with AI"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Customer Service Bots"})," - Automated phone support agents"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Appointment Schedulers"})," - AI agents that handle booking calls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Survey & Feedback Systems"})," - Automated phone surveys"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lead Qualification"})," - AI agents for sales calls"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-architecture",children:"\ud83c\udfd7\ufe0f Architecture"}),"\n",(0,s.jsx)(n.p,{children:"The system consists of two main components:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcf1 Web App"})," (Next.js) - Frontend for call management and configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udd0c WebSocket Server"})," (Express) - Handles Twilio \u2194 OpenAI Realtime API connection"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-quick-start",children:"\ud83d\ude80 Quick Start"}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Node.js 18+"}),"\n",(0,s.jsx)(n.li,{children:"Twilio Account"}),"\n",(0,s.jsx)(n.li,{children:"OpenAI API Key"}),"\n",(0,s.jsx)(n.li,{children:"PostgreSQL Database (via Neon)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"1-clone--install",children:"1. Clone & Install"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/acedit-ai/phone-screen.git\ncd phone-screen\n\n# Install webapp dependencies\ncd webapp && npm install\n\n# Install websocket server dependencies  \ncd ../websocket-server && npm install\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-environment-setup",children:"2. Environment Setup"}),"\n",(0,s.jsx)(n.p,{children:"Set up your environment variables for both the webapp and websocket server. Detailed setup instructions will be available in the Environment Setup guide."}),"\n",(0,s.jsx)(n.h3,{id:"3-start-development",children:"3. Start Development"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Terminal 1: Start webapp\ncd webapp && npm run dev\n\n# Terminal 2: Start websocket server\ncd websocket-server && npm run dev\n\n# Terminal 3: Start ngrok tunnel\nngrok http 8081\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Your AI calling system will be running at ",(0,s.jsx)(n.code,{children:"http://localhost:3000"}),"!"]}),"\n",(0,s.jsx)(n.h2,{id:"-whats-next",children:"\ud83d\udcda What's Next?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Environment Setup"})," - Configure your API keys and database"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Architecture Overview"})," - Understand how the system works"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Customization Guide"})," - Adapt the AI for your use case"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deployment"})," - Deploy to production"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-features",children:"\ud83c\udf1f Features"}),"\n",(0,s.jsxs)(n.p,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Multi-Region Support"})," - US, Australia, India phone numbers",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Real-time AI Conversations"})," - OpenAI Realtime API integration",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Call Transcripts"})," - Complete conversation logs",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Function Calling"})," - AI can execute custom actions",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Rate Limiting"})," - Built-in abuse protection",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Human Verification"})," - Turnstile integration",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Database Integration"})," - PostgreSQL with Neon"]}),"\n",(0,s.jsx)(n.h2,{id:"-contributing",children:"\ud83e\udd1d Contributing"}),"\n",(0,s.jsx)(n.p,{children:"We welcome contributions! Contributing guidelines will be available soon."}),"\n",(0,s.jsx)(n.h2,{id:"-license",children:"\ud83d\udcc4 License"}),"\n",(0,s.jsxs)(n.p,{children:["This project is licensed under the MIT License - see the ",(0,s.jsx)(n.a,{href:"https://github.com/acedit-ai/phone-screen/blob/main/LICENSE",children:"LICENSE"})," file for details."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(6540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);